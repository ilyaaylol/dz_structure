"""
Связанный список, методы(добавление в начало/конец, принт, разворот списка)

"""
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
class linkedList:
    def __init__(self):
        self.head = None
    def append(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return
        current = self.head
        while current.next:
            current = current.next
        current.next = new_node
    def appenf_new_head(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return

        new_node.next = self.head
        self.head = new_node
    def print_list(self):
        current = self.head
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print('None')

    # Алгоритм
    """
    Разворачиваем список

    """

    def ReverseLinkedList(self):
        prev = None
        current = self.head
        while current:
            next_node = current.next
            current.next = prev
            prev = current
            current = next_node
        self.head = prev



lst = linkedList()
for value in [11, 3, 8, 9, 6, 11, 16, 17]:
    lst.append(value)


lst.ReverseLinkedList()
lst.print_list()
